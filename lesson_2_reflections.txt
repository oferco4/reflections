q: What happens when you initialize a repository? Why do you need to do it?
a: New headen file created represent the current directory as the working directory, save the current status as the 
   head and start following changes.


q: How is the staging area different from the working directory and the repository? What value do you think it offers?
a: The working directory represent the current state of my directory and can check for changes between the git head 
   repository and my directory.
   The staging area represent set of new files with one logical subject which I want to add to the git repository.

q: How can you use the staging area to make sure you have one commit per logical change?
a: use diff --staged to take a loook at all the changes you are about to commit.

q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?
a: when you want to send a working copy to friends and continue develop your app.

q: How do the diagrams help you visualize the branch structure?
a: The diagrams helps see what commits each user(with its current branch) see and impact, and how different branches does 
   not impact each others
   
q: What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
a: Merge code from of different nodes (which may represent 2 different features) into one branch that cotains them all.
   we represent the diagram the way we do because we the graph represent what we did unify 2 nodes into 1

q: What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
a: automatic merge is very convinience and fast, but it can merge things that the user did not intent to.   